openapi: 3.0.0
info:
  title: Users API
  description: API for managing users in the application.
  version: 1.0.0
paths:
  /users:
    get:
      summary: Get a list of users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: John Doe
                    email:
                      type: string
                      example: john.doe@example.com
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john.doe@example.com
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: John Doe
                  email:
                    type: string
                    example: john.doe@example.com
  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: John Doe
                  email:
                    type: string
                    example: john.doe@example.com
        '404':
          description: User not found
    put:
      summary: Update a user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john.doe@example.com
      responses:
        '200':
          description: User updated successfully
        '404':
          description: User not found
    delete:
      summary: Delete a user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user to delete
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found